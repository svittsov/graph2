#include <iostream>

using namespace std;

int main() {

    setlocale(LC_ALL, "RUS");

    int N;              // Количество вершин графа
    int road_length = 0;// Счетчик дорог

    do {                // Выполняем ввод, пока не в диапазоне 1 <= N <= 1000

        cin >> N;

    } while (!(1 <= N && N <= 1000));

    /* Создаем двумерный динамический массив (т.к. длина массива вводится пользователем) */

    int** matrix = new int* [N];
    for (int i = 0; i < N; i++) {
        matrix[i] = new int[N];
    }

    /* --------------------------------------------------------------------------------- */

    /* Заполняем элементы массива  (матрица смежности графа) */
    // i - строки (вершины графа)
    // j - колонки (ребра графа)

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cin >> matrix[i][j];
        }
    }

    /* ---------------------------- */

    /* Считаем количество дорог */

    for (int i = 0; i < N; i++) {       // В данном цикле проходимся по строкам (вершинам)
        for (int j = 0; j < N; j++) {   // Пробегаем по столбцам

            if (matrix[i][j] != 0) {                // Если элемент столбца не 0
                if (matrix[i][j] == matrix[j][i]) { // Если длины дорог равны, 
                    matrix[j][i] = 0;               // то обнуляем, чтобы не считать одинаковые дороги
                }
                road_length += matrix[i][j];              // 
            }
        }
    }
    /* --------------------------------------------- */

    cout << endl << road_length;

    for (int i = 0; i < N; i++) {
        delete[] matrix[i];  // удаляем массив (выделив динамически массив, мы должны очистить память)
    }
    delete[] matrix;

    return 0;

}